version: '3'

volumes:
  postgres_data:
    name: movies_data
  static_volume:
    name: static

networks:
  movies_network:

services:
  db:
    image: postgres:13.0
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./schema_design/movies_database.ddl:/docker-entrypoint-initdb.d/movies_database.sql
    networks:
      - movies_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U app"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: movies_admin/docker/Dockerfile
    restart: always
    volumes:
      - static_volume:/opt/app/static
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - movies_network

  nginx:
    image: nginx:1.23.1-alpine
    volumes:
      - static_volume:/var/html/static/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - backend
    ports:
      - 80:80
    networks:
      - movies_network

  swagger-editor:
    image: swaggerapi/swagger-editor
    container_name: "swagger-editor"
    depends_on:
      - nginx
    ports:
      - 8081:8080

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "swagger-ui"
    depends_on:
      - nginx
    ports:
      - 8080:8080
    volumes:
      - ./django_api/openapi.yaml:/openapi.yaml
    environment:
      SWAGGER_JSON: /openapi.yaml
